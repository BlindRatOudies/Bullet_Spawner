## This code was taken from BitBirdy on youtube

class_name Bullet_Spawner
extends Marker2D

@onready var enemy_ship: EnemyShip = $".."

const BULLET_BASE: PackedScene = preload("res://Scenes/Enemies/Enemy_Bullets/Enemy_bullet_base.tscn")
@onready var fire_rate: Timer = $Fire_Rate
@onready var rotater: Node2D = $Rotater

@export_group("Bullets")
@export_subgroup("Rotation")
@export var radius = 100
@export var rotate_speed = 100
@export_subgroup("Fire Rate")
@export var shooter_timer_wait_time = 0.2
@export var spawn_point_count = 4
@export var shoot_count:int = 4
var count = 0

func _ready() -> void:
	
	# NOTE:uses math to figure out the distance between each spawnpoint
	var step = 2 * PI / spawn_point_count
	
	# NOTE:takes a point on the right. with each step itll rotate it
	for i in range(spawn_point_count):
		var spawn_point = Node2D.new()
		var pos = Vector2(radius, 0).rotated(step * i)
		spawn_point.position = pos
		#NOTE: rotates the spawner itself. so the bullet goes the right way
		spawn_point.rotation = pos.angle()
		rotater.add_child(spawn_point)

	fire_rate.wait_time = shooter_timer_wait_time
	

func _process(delta: float) -> void:
	var new_rotation = rotater.rotation_degrees + rotate_speed * delta
	rotater.rotation_degrees = fmod(new_rotation, 360)


func start_shooting():
	fire_rate.start()
	count = 0
	

func _on_shoot_timer_timeout() -> void:
	if count < shoot_count:
		count+=1
		for s in rotater.get_children():
			var bullet = BULLET_BASE.instantiate()
			get_tree().root.add_child(bullet)
			bullet.position = s.global_position
